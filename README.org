
* DEPRECATED and merged into /xournal repo as =dmg-fork=
  
  scroll down for the older "xournal" readme

** steps used to graft old dmg fork repo with mainline from sf.net

- ref: http://bugsquash.blogspot.com/2010/03/stitching-git-histories.html
- ref: http://ben.straubnet.net/post/939181602/git-grafting-repositories
- ref: http://sitaramc.github.com/concepts/grafting.html

=git clone git@github.com:whacked/xournal.git=

[[file:img/post-clone.png]]

*** add old repo as a remote:

#+BEGIN_SRC sh :results output
git remote add dmg-fork git://github.com/whacked/xournal_fork_dmg.git
git fetch dmg-fork
#+END_SRC

the first divergence point we want is:
=2a103f1d9c3730559d79157166faed81047debc2=.
verify this by comparing the ChangeLog

The parent should be the commit corresponding to tag =Release-0_4_2_1=, i.e.: =20813bc253d6e133a0f5606cdf86cee5910390bf=.

#+BEGIN_COMMENT
dmg's fork imports xournal cvs at version =0.4.2.1= but that is not the commit we want. The commit immediately after that moves the files from =xournal.git/xournal= to =xournal.git=; this is what we want.
#+END_COMMENT

*** create graft point

#+BEGIN_SRC sh :results silent
cat > .git/info/grafts <<CHILD-PARENT
2a103f1d9c3730559d79157166faed81047debc2 20813bc253d6e133a0f5606cdf86cee5910390bf
CHILD-PARENT
#+END_SRC

restart =gitk --all= and check if the graph looks ok. Now we have a graph like so:

[[file:img/post-graft.png]]

*** use filter-branch to make graft permanent
    
    *will rewrite hashes for the grafted branch*

    this makes the graft permanent

    =git filter-branch --tag-name-filter cat -- --all=
    #+BEGIN_EXAMPLE
      Rewrite 9c675c09ee4e6eaec4b84af6c013dc3b8a3cd6d0 (181/181)
      WARNING: Ref 'refs/heads/master' is unchanged
      Ref 'refs/remotes/dmg-fork/master' was rewritten
      WARNING: Ref 'refs/remotes/origin/master' is unchanged
      WARNING: Ref 'refs/remotes/origin/master' is unchanged
      Ref 'refs/tags/pre-poppler-19' was rewritten
      
    #+END_EXAMPLE

    [[file:img/post-filter-branch.png]]

    note now that --all will show 2 branches! They actually will have different hashes

    if all looks OK:

    =rm -rf .git/info/grafts .git/refs/original=

    now =gitk --all= looks like this:
    
    [[file:img/post-rm-rf.png]]

    track the =dmg-fork= branch:

    =git branch --set-upstream dmg-fork remotes/dmg-fork/master=
    #+BEGIN_EXAMPLE
    Branch dmg-fork set up to track remote branch master from dmg-fork.
    #+END_EXAMPLE

** another way to do it

   from: http://ben.straubnet.net/post/939181602/git-grafting-repositories

   this actually seems to be a straightfoward and painless way to do it. A quick look confirms the new branch has the same hashes as with using the =filter-branch= method.

   #+BEGIN_SRC sh :eval never
   git fast-export --all > ../export.temp.txt
   mkdir ../export-temp-complete
   cd ../export-temp-complete
   git init
   git fast-import < ../export.temp.txt
   #+END_SRC

   #+BEGIN_EXAMPLE
     git-fast-import statistics:
     ---------------------------------------------------------------------
     Alloc'd objects:       5000
     Total objects:         1401 (         6 duplicates                  )
           blobs  :          830 (         0 duplicates        386 deltas of        812 attempts)
           trees  :          390 (         6 duplicates        324 deltas of        362 attempts)
           commits:          181 (         0 duplicates          0 deltas of          0 attempts)
           tags   :            0 (         0 duplicates          0 deltas of          0 attempts)
     Total branches:           4 (         3 loads     )
           marks:           1024 (      1011 unique    )
           atoms:            176
     Memory total:          2344 KiB
            pools:          2110 KiB
          objects:           234 KiB
     ---------------------------------------------------------------------
     pack_report: getpagesize()            =       4096
     pack_report: core.packedGitWindowSize = 1073741824
     pack_report: core.packedGitLimit      = 8589934592
     pack_report: pack_used_ctr            =       1463
     pack_report: pack_mmap_calls          =        182
     pack_report: pack_open_windows        =          1 /          1
     pack_report: pack_mapped              =    5998700 /    5998700
     ---------------------------------------------------------------------
       
   #+END_EXAMPLE

* xournal

is currently the *only* open source note-taking software that has top-notch annotation facilities for pdfs (and images), that works on Windows, Mac, and Linux. It is the default pdf reader on all my machines. I have tried Skim (Mac), Okular (Lin/Win/Mac), and a few others. Nothing comes close in interop, customizability, and features. Plus, your notes are stored in xoj files that are simple to edit and save and sync.

** current status:

- compiles & works for me on ubuntu 12.04. uses poppler 18 that breaks previous code. my last working version for poppler 16 on ubuntu 11.04 is tagged =pre-poppler-19=.
- some iterations before that should work with OSX 10.6.4, 10.5.8. install deps with MacPorts ( =sudo port install xournal= ), and replace the MacPorts xournal. as of 2011-02 untested and you'll need some extra libraries
- libgcrypt11-dev + libsqlite3 for bookmark function

** contains these modifications:

*** select text, create a highlight box & copy selection to clipboard
    - popup dialog after select to confirm copy to clipboard
    - search for =0x40409040= in xo-paint.c (in =start_selecttext=) to change select box color

*** auto save and load last opened page
    when you open a pdf, xournal will jump to the last viewed page (unless overridden with dmgerman's page number command line argument). requires =sqlite3-dev= and =libgcrypt11-dev=. stores and reads ~/.xournal/xournal.db

** manually editing .xoj files

   if you are interested in editing .xoj in vim, add these lines to your vimrc (requires gzip support):

#+begin_example
  autocmd BufReadPre,FileReadPre    *.xoj setlocal bin
  autocmd BufReadPost,FileReadPost  *.xoj  call gzip#read("gzip -S .xoj -dn")
  autocmd BufWritePost,FileWritePost    *.xoj  call gzip#write("gzip -S .xoj")
  autocmd FileAppendPre         *.xoj  call gzip#appre("gzip -S .xoj -dn")
  autocmd FileAppendPost      *.xoj  call gzip#write("gzip -S .xoj")
#+end_example

** other update list
- 2011-01-31 safe pdf backgrounds with relative filepath if same basepath found
- 2011-02-01 added image extraction. copy to clipboard after text selection will now automatically save a png of the selected region; the png filename is written to ~/.xournal/extract.log for hook use
- 2011-02-01 executes the file found at =~/.xournal/hook-post-extract= if it exists
- 2011-02-05 actually create an undoable rectangle item where text-selection was used; mostly copy pasta from the stroke
- 2011-04-07 added files and modifications for nautilus thumbnail support by russell sears
- 2011-04-09 adding auto-bookmark and restore last-read page function

** more generalized changelog
  - 2011-01-31 changed selectRect code (swap y1 & y2), somehow this makes selection more correct
  - 2011-02-05 looks like it segfaults if there isn't a background pdf?
